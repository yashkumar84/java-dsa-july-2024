/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        // HashMap<ListNode , Integer> map = new HashMap<>();
        // ListNode cur = headA;
        // while(cur != null){
        //     map.put(cur , cur.val);
        //     cur = cur.next;
        // }
        // cur = headB;
        // while(cur != null){
        //     if(map.containsKey(cur)){
        //         return cur;
        //     }
        //     cur = cur.next;
        // }
        // return null;
        ListNode a = headA;
        ListNode b = headB;
        while(a != b){
            if(a == null){
                a = headB;
            }else
            a = a.next;
          
            if(b == null){
                b = headA;
        }else
            b = b.next;
        }
        return a;

    }
}
